{"version":3,"sources":["components/Loader/Loader.tsx","api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/comments.ts","components/PostDetails/PostDetails.tsx","components/UserSelect/UserSelect.tsx","App.tsx","index.tsx"],"names":["Loader","className","BASE_URL","basicRequest","url","option","fetch","then","response","ok","Error","status","statusText","json","request","PostsList","props","selectedUserId","setPost","selectedPostId","useState","posts","setPosts","loading","setLoadingStatus","useEffect","userId","map","post","title","type","onClick","id","NewCommentForm","postId","postNewComment","name","setCommentName","email","setCommentEmail","body","setCommentBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","getPostComments","PostDetails","details","setDetails","comments","setComments","commentsDisplay","setCommentsDisplay","handleRemove","commentId","method","updatedComments","length","comment","newComment","headers","JSON","stringify","addCommentToServer","UserSelect","setUser","App","setSelectedUserId","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.958beb48.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const basicRequest = (url: string, option = {}) => {\n  return fetch(`${BASE_URL}${url}`, option)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import { basicRequest } from './api';\n\nconst request = (url: string) => {\n  return basicRequest(`/posts${url}`);\n};\n\nexport const getUserPosts = (userId: number) => {\n  return request(\n    userId === 0\n      ? ('')\n      : (`?userId=${userId}`),\n  );\n};\n\nexport const getPostDetails = (postId: number) => {\n  return request(`/${postId}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\ntype Props = {\n  selectedUserId: number;\n  setPost: React.Dispatch<React.SetStateAction<number>>;\n  selectedPostId: number;\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { selectedUserId, setPost, selectedPostId } = props;\n  const [posts, setPosts] = useState([] as Post[]);\n  const [loading, setLoadingStatus] = useState(true);\n\n  useEffect(() => {\n    getUserPosts(selectedUserId)\n      .then(response => {\n        setPosts(response);\n        setLoadingStatus(false);\n      });\n  }, [selectedUserId]);\n\n  const selectHandler = (id: number) => {\n    if (id === selectedPostId) {\n      setPost(0);\n    } else {\n      setPost(id);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      {loading && (\n        <Loader />\n      )}\n      <ul className=\"PostsList__list\">\n        {posts.map((post: Post) => (\n          <>\n            <li\n              className=\"PostsList__item\"\n              key={post.id}\n            >\n              <div>\n                <b>{`[User #${post.userId}]: `}</b>\n                {post.title}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => selectHandler(post.id)}\n              >\n                {selectedPostId === post.id ? (\n                  'Close'\n                ) : (\n                  'Open'\n                )}\n              </button>\n            </li>\n          </>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number;\n  postNewComment: (comment: Comment) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { postId, postNewComment } = props;\n  const [name, setCommentName] = useState('');\n  const [email, setCommentEmail] = useState('');\n  const [body, setCommentBody] = useState('');\n  const makeComment = () => {\n    return {\n      postId,\n      name,\n      email,\n      body,\n    };\n  };\n\n  const resetInputs = () => {\n    setCommentName('');\n    setCommentEmail('');\n    setCommentBody('');\n  };\n\n  const addNewComment = (event: React.FormEvent) => {\n    event.preventDefault();\n    const newComment = makeComment();\n\n    postNewComment(newComment as Comment);\n    resetInputs();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={addNewComment}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          value={name}\n          onChange={(event) => setCommentName(event.target.value)}\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          value={email}\n          onChange={(event) => setCommentEmail(event.target.value)}\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={(event) => setCommentBody(event.target.value)}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { basicRequest } from './api';\n\nconst request = (url?: string, option = {}) => {\n  return basicRequest(`/comments${url}`, option);\n};\n\nexport const getPostComments = (postId: number) => {\n  return request(`?postId=${postId}`);\n};\n\nexport const deleteComment = (commentId: number) => {\n  return request(`/${commentId}`, { method: 'DELETE' });\n};\n\nexport const addCommentToServer = (newComment: Partial<Comment>) => {\n  return request('', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment, addCommentToServer } from '../../api/comments';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectedPostId } = props;\n  const [details, setDetails] = useState({} as Post);\n  const [comments, setComments] = useState([] as Comment[]);\n  const [commentsDisplay, setCommentsDisplay] = useState(true);\n  const [loading, setLoadingStatus] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(response => {\n        setDetails(response);\n        setLoadingStatus(false);\n      });\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    getPostComments(selectedPostId)\n      .then(response => setComments([...response]));\n  }, [selectedPostId]);\n\n  const handleRemove = (id: number) => {\n    deleteComment(id)\n      .then(() => getPostComments(selectedPostId))\n      .then(updatedComments => setComments(updatedComments));\n  };\n\n  const addComment = (newComment: Comment) => {\n    addCommentToServer(newComment)\n      .then(() => getPostComments(selectedPostId))\n      .then(updatedComments => setComments(updatedComments));\n  };\n\n  const showComments = () => {\n    if (commentsDisplay) {\n      setCommentsDisplay(false);\n    } else {\n      setCommentsDisplay(true);\n    }\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      {loading && (\n        <Loader />\n      )}\n\n      <section className=\"PostDetails__post\">\n        <p>\n          {details.body}\n        </p>\n      </section>\n\n      {comments.length > 0 && (\n        <>\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => showComments()}\n            >\n              {commentsDisplay ? (\n                `Hide ${comments.length} comments`\n              ) : (\n                'Show comments'\n              )}\n            </button>\n\n            {commentsDisplay && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={comment.id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => handleRemove(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>\n                      {comment.body}\n                    </p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n        </>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            postNewComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setUser: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport const UserSelect: React.FC<Props> = (props) => {\n  const { setUser } = props;\n\n  return (\n    <label>\n      Select a user: &nbsp;\n\n      <select\n        className=\"App__user-selector\"\n        onChange={(event) => {\n          setUser(+event.target.value);\n        }}\n      >\n        <option value=\"0\">All users</option>\n        <option value=\"1\">Leanne Graham</option>\n        <option value=\"2\">Ervin Howell</option>\n        <option value=\"3\">Clementine Bauch</option>\n        <option value=\"4\">Patricia Lebsack</option>\n        <option value=\"5\">Chelsey Dietrich</option>\n        <option value=\"6\">Mrs. Dennis Schulist</option>\n        <option value=\"7\">Kurtis Weissnat</option>\n        <option value=\"8\">Nicholas Runolfsdottir V</option>\n        <option value=\"9\">Glenna Reichert</option>\n        <option value=\"10\">Leanne Graham</option>\n      </select>\n    </label>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect/UserSelect';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect setUser={setSelectedUserId} />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={selectedUserId}\n            setPost={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {!!selectedPostId && (\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}